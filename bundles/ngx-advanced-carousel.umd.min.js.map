{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-advanced-carousel/lib/rxjs.observable.resize.ts","ng://ngx-advanced-carousel/lib/ngx-advanced-carousel-item.directive.ts","ng://ngx-advanced-carousel/lib/ngx-advanced-carousel.component.ts","ng://ngx-advanced-carousel/lib/ngx-advanced-carousel.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","resizeObservable","elm","cb","time","elmObserve$","Observable","observer","ResizeObserver","entries","obs","observe","pipe","debounceTime","tap","finalize","unobserve","disconnect","NgxAdvancedCarouselItemDirective","Directive","args","selector","NgxAdvancedCarouselComponent","platformId","_document","_renderer","_zone","_cd","_this","this","verticalModeEnabled","indexChanged","EventEmitter","_startIndex","mappedData","aniTime","aniClass","aniClassAuto","showButtonsMethod","panBoundary","align","notDrag","trackByKey","mourseEnable","delay","direction","scrollNum","isDragMany","swipeVelocity","isRtl","breakpoint","screenSizeMap","xxl","xl","lg","md","sm","xs","padding","leaveObs$","merge","fromEvent","grabbing","stopPropagation","preventDefault","isFromAuto","isAutoNum","mouseOnContainer","alignDistance","elmWidth","elmHeight","restart","BehaviorSubject","speedChange","stopEvent","Subject","destroy$","_porgressWidth","_currentIndex","_showNum","_autoplay","_infinite","_grabbing","_disableDrag","gridBy","col","row","panCount","realIndex","singleTimeRun","initialIndex","originalData","_infineDataCount","onChange","_","onTouched","Object","defineProperty","prototype","_data","rootElm","destoryHammer","hammer","bindHammer","runOutsideAngular","setViewHeight","setViewWidth","reSetAlignDistance","currentIndex","startIndex","data","showNum","isPlatformBrowser","elms","progressWidth","doNextSub$","doNext","subscribe","unsubscribe","infinite","itemElms","runLoop","drawView","dir","autoplay","callRestart","Math","ceil","timer","switchMap","of","take","run","detectChanges","emit","viewSize","undefined","progressElm","setStyle","progressContainerElm","children","addClass","containerElm","removeClass","addIndex","getBoundingClientRect","width","height","containerElmHeight","val","ngAfterViewInit","container","nativeElement","init","forkJoin","bindClick","changes","destroy","containerResize","takeUntil","ngOnDestroy","writeValue","registerOnChange","fn","registerOnTouched","initVariable","disableDrag","toArray","map","x","startEvent","asObservable","filter","runProgress","rootElmWidth","isInit","getAutoNum","initData","containerElmWidth","viewArea","forEach","element","setAttribute","rootElmHeight","hm","Hammer","Manager","pan","Pan","DIRECTION_HORIZONTAL","threshold","add","on","lengthOne","removeContainerTransition","type","stop","outOfBound","deltaY","deltaX","left","abs","moveNum","prevIndex","nextIndex","goNext","goPrev","velocityX","distance","maxRightIndex","btnNext","btnPrev","index","isAnimation","betweenTime","howTimes","speed","everyIncrease","interval","t","bufferCount","round","arrayCreator","currWidth","now","find","b","screenSize","number","floor","style","trackByFcn","item","arr","count","unshift","Component","encapsulation","ViewEncapsulation","None","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","changeDetection","ChangeDetectionStrategy","OnPush","Inject","PLATFORM_ID","DOCUMENT","Renderer2","NgZone","ChangeDetectorRef","Input","Output","ViewChild","static","ViewChildren","ContentChildren","descendants","read","ElementRef","ContentChild","NgxAdvancedCarouselModule","NgModule","declarations","exports","imports","CommonModule","FormsModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import ResizeObserver from 'resize-observer-polyfill';\nimport { Observable, Subscriber } from 'rxjs';\nimport { debounceTime, finalize, tap } from 'rxjs/operators';\n\n/**\n * An observable creator for element resize.\n * @param elm the watch element.\n * @param cb when resize complete, call back function.\n * @param time resize emit time, default is 200\n */\nexport function resizeObservable(\n  elm: HTMLElement,\n  cb: () => void,\n  time = 200,\n): Observable<any> {\n  let elmObserve$: ResizeObserver;\n  return new Observable((observer: Subscriber<any>) => {\n    elmObserve$ = new ResizeObserver((entries, obs) => {\n      observer.next(elmObserve$);\n    });\n    elmObserve$.observe(elm);\n  }).pipe(\n    debounceTime(time),\n    tap(() => {\n      cb();\n    }),\n    finalize(() => {\n      elmObserve$.unobserve(elm);\n      elmObserve$.disconnect();\n    }),\n  );\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-advanced-carousel-item]',\n})\nexport class NgxAdvancedCarouselItemDirective {\n  constructor() {}\n}\n","import { DOCUMENT, isPlatformBrowser } from \"@angular/common\";\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport {\n  BehaviorSubject,\n  forkJoin,\n  fromEvent,\n  interval,\n  merge,\n  Observable,\n  of,\n  Subject,\n  Subscription,\n  timer,\n} from \"rxjs\";\nimport {\n  bufferCount,\n  filter,\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n} from \"rxjs/operators\";\nimport { NgxAdvancedCarouselItemDirective } from \"./ngx-advanced-carousel-item.directive\";\nimport { resizeObservable } from \"./rxjs.observable.resize\";\ndeclare var Hammer;\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: \"ngx-advanced-carousel\",\n  styleUrls: [\"./ngx-advanced-carousel.component.scss\"],\n  templateUrl: \"./ngx-advanced-carousel.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxAdvancedCarouselComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxAdvancedCarouselComponent\n  implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  @Input()\n  public get data() {\n    return this._data;\n  }\n  public set data(value) {\n    this._data = value;\n  }\n  /** disable drag event with touch and mouse pan moving, default is `false` */\n  @Input(\"disable-drag\")\n  public get disableDrag() {\n    return this._disableDrag;\n  }\n  public set disableDrag(value) {\n    if (this.rootElm) {\n      if (this._disableDrag !== value) {\n        if (value) {\n          this.destoryHammer();\n        } else {\n          this.hammer = this.bindHammer();\n        }\n      }\n    }\n    this._disableDrag = value;\n  }\n\n  /** is the carousel can move infinite */\n  @Input(\"infinite\")\n  public get infinite() {\n    return this._infinite;\n  }\n  public set infinite(value) {\n    this._infinite = value;\n\n    /* this.infiniteElmRefs.forEach((ref) => {\n      this.addStyle(ref.rootNodes[0], {\n        visibility: this.runLoop ? 'visible' : 'hidden',\n      });\n    }); */\n  }\n\n  /** auto play speed */\n  @Input(\"autoplay-speed\")\n  public get speed() {\n    return this.speedChange.value;\n  }\n  public set speed(value) {\n    this._zone.runOutsideAngular(() => {\n      this.speedChange.next(value);\n    });\n  }\n\n  /**\n   * how many number items to show once, default is `1`\n   * set `auto` to using `[breakpoint]` set value.\n   */\n  @Input(\"show-num\")\n  public get showNum(): number | \"auto\" {\n    return this._showNum;\n  }\n  public set showNum(value: number | \"auto\") {\n    if (value === \"auto\") {\n      this.isAutoNum = true;\n    } else {\n      this._showNum = +value;\n      this.realIndex = this._showNum;\n      if (this.rootElm) {\n        if (!this.verticalModeEnabled) {\n          this.setViewWidth();\n        } else {\n          this.setViewHeight();\n        }\n        this.reSetAlignDistance();\n      }\n      this.currentIndex = this.startIndex;\n    }\n  }\n\n  /** carousel auto play confing */\n  @Input(\"autoplay\")\n  public get autoplay() {\n    return this._autoplay;\n  }\n  public set autoplay(value) {\n    this._autoplay =\n      this.data && this.data.length > this.showNum ? value : false;\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.elms) {\n        this.progressWidth = 0;\n        if (value) {\n          this._zone.runOutsideAngular(() => {\n            this.doNextSub$ = this.doNext.subscribe();\n          });\n        } else {\n          if (this.doNextSub$) {\n            this.doNextSub$.unsubscribe();\n          }\n        }\n      }\n    }\n    // if set autoplay, then the infinite is true\n    if (value) {\n      this.infinite =\n        this.data && this.data.length > this.showNum ? value : false;\n    }\n  }\n\n  @Input() public verticalModeEnabled = false;\n\n  public get currentIndex() {\n    return this._currentIndex;\n  }\n  public set currentIndex(value) {\n    // if now index if not equale to save index, do someting\n    if (this.currentIndex !== value) {\n      // if the value is not contain with the boundary not handlerw\n      if (value < 0) {\n        value = 0;\n      }\n      if (\n        !this.itemElms ||\n        (!this.runLoop && !(0 <= value && value <= this.itemElms.length - 1) ||\n        (this.data && this.data.length < this._showNum ))\n      ) {\n        this.drawView(this.currentIndex);\n        return;\n      }\n      const dir = this._currentIndex > value ? -1 : 1;\n      this._currentIndex = value;\n      if (this.elms) {\n        if (this.autoplay && !this.isFromAuto) {\n          this._zone.runOutsideAngular(() => {\n            this.stopEvent.next();\n            this.callRestart();\n          });\n        }\n        this.realIndex =\n          this.gridBy.col * this.gridBy.row > 1\n            ? this.currentIndex +\n              this._showNum +\n              this.scrollNum * this.gridBy.col\n            : this.currentIndex + this._showNum;\n        if (!this.infinite && this.realIndex > this.elms.length) {\n          if (this.gridBy.col * this.gridBy.row > 1) {\n            this._currentIndex =\n              this.realIndex -\n                this._showNum -\n                this.scrollNum * this.gridBy.col <\n              0\n                ? 0\n                : this.realIndex -\n                  this._showNum -\n                  this.scrollNum * this.gridBy.col;\n          } else {\n            this._currentIndex =\n              this.elms.length - this._showNum < 0\n                ? 0\n                : this.elms.length - this._showNum;\n          }\n          this.realIndex =\n            dir > 0\n              ? Math.ceil(\n                  this.currentIndex / this._showNum +\n                    (this.currentIndex % this._showNum ? 0 : 1)\n                ) >= Math.ceil(this.elms.length / this._showNum)\n                ? this.elms.length\n                : this.currentIndex\n              : this.currentIndex;\n        }\n        this._currentIndex =\n          this.currentIndex < 0 && !this.infinite ? 0 : this.currentIndex;\n        this.drawView(this.currentIndex, true);\n        if (this.infinite) {\n          if (this.currentIndex < this.initialIndex) {\n            this._currentIndex = this.currentIndex + this._showNum * 2;\n          }\n          if (this.currentIndex > this.data.length - this._showNum * 2 - 1) {\n            this._currentIndex =\n              this.currentIndex - this.data.length + this._showNum * 4;\n          }\n          this._zone.runOutsideAngular(() => {\n            timer(this.aniTime + 100)\n              .pipe(\n                switchMap(() => {\n                  this.drawView(this.currentIndex, false);\n                  return of(null);\n                }),\n                take(1)\n              )\n              .subscribe();\n          });\n        }\n        /* if (this.realIndex > this.elms.length) {\n          const count = (this.realIndex - this.elms.length) % this._showNum;\n          for (let i = 0; i < count; i++) {\n            this.data.shift();\n          }\n          this._currentIndex -= count;\n          this.realIndex =\n            this.gridBy.col * this.gridBy.row > 1\n              ? this.currentIndex +\n                this._showNum +\n                this.scrollNum * this.gridBy.col\n              : this.currentIndex + this._showNum;\n        } */\n      }\n      if (\n        0 <= this.currentIndex &&\n        this.currentIndex <= this.itemElms.length - 1\n      ) {\n        this._zone.run(() => {\n          this.onChange(this.currentIndex);\n          this._cd.detectChanges();\n        });\n      }\n    }\n    this.indexChanged.emit({\n      realIndex: this.realIndex,\n      currentIndex: this.currentIndex,\n      viewSize: this._showNum,\n    });\n    this.isFromAuto = false;\n  }\n\n  public get progressWidth() {\n    return this._porgressWidth;\n  }\n  public set progressWidth(value) {\n    if (this.progressElm !== undefined && this.autoplay) {\n      this._porgressWidth = value;\n      this._renderer.setStyle(\n        (this.progressContainerElm.nativeElement as HTMLElement).children[0],\n        \"width\",\n        `${this.progressWidth}%`\n      );\n    }\n  }\n\n  public get grabbing() {\n    return this._grabbing;\n  }\n  public set grabbing(value: boolean) {\n    if (this._grabbing !== value) {\n      this._zone.run(() => {\n        this._grabbing = value;\n        if (value) {\n          this._renderer.addClass(this.containerElm, \"grabbing\");\n        } else {\n          this.panCount = 0;\n          this.callRestart();\n          this._renderer.removeClass(this.containerElm, \"grabbing\");\n        }\n        this._cd.detectChanges();\n      });\n    }\n  }\n\n  private set left(value: number) {\n    if (!this.verticalModeEnabled) {\n      if (isPlatformBrowser(this.platformId)) {\n        this._renderer.setStyle(\n          this.containerElm,\n          \"transform\",\n          `translateX(${\n            (value + (this.currentIndex !== 0 ? this.padding : 0)) *\n            (this.align === \"right\" ? -1 : 1)\n          }px)`\n        );\n      } else {\n        this._renderer.setStyle(\n          this.containerElm,\n          \"transform\",\n          `translateX(${value}%)`\n        );\n      }\n    } else {\n      if (isPlatformBrowser(this.platformId)) {\n        this._renderer.setStyle(\n          this.containerElm,\n          \"transform\",\n          `translateY(${\n            value + (this.currentIndex !== 0 ? this.padding : 0)\n          }px)`\n        );\n      } else {\n        this._renderer.setStyle(\n          this.containerElm,\n          \"transform\",\n          `translateY(${value}%)`\n        );\n      }\n    }\n  }\n\n  private get maxRightIndex() {\n    let addIndex = 0;\n    switch (this.align) {\n      case \"left\":\n        addIndex = 0;\n        break;\n      case \"center\":\n        addIndex = (this.showNum as number) - 1;\n        break;\n      case \"right\":\n        addIndex = 0;\n        break;\n      default:\n        addIndex = 0;\n        break;\n    }\n    return this.itemElms.length - 1 - this._showNum + 1 + addIndex;\n  }\n\n  private get runLoop() {\n    return this.autoplay || this.infinite;\n  }\n  private get lengthOne() {\n    return this.itemElms.length === 1;\n  }\n\n  private get rootElmWidth() {\n    return isPlatformBrowser(this.platformId)\n      ? this.rootElm.getBoundingClientRect().width\n      : 100;\n  }\n\n  private get rootElmHeight() {\n    return isPlatformBrowser(this.platformId)\n      ? this.rootElm.getBoundingClientRect().height\n      : 100;\n  }\n\n  private set containerElmWidth(value: number) {\n    if (!this.verticalModeEnabled) {\n      this.setStyle(this.containerElm, \"width\", value);\n    } else {\n      this.containerElmHeight = value;\n    }\n  }\n\n  private set containerElmHeight(value: number) {\n    this.setStyle(this.containerElm, \"height\", value);\n  }\n\n  @Output() public indexChanged: EventEmitter<any> = new EventEmitter();\n\n  private _startIndex = 0;\n\n  @Input()\n  private get startIndex() {\n    return this._startIndex;\n  }\n  private set startIndex(val) {\n    this._startIndex = val;\n    this.currentIndex = this._startIndex;\n  }\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Inject(DOCUMENT) private _document,\n    private _renderer: Renderer2,\n    private _zone: NgZone,\n    private _cd: ChangeDetectorRef\n  ) {}\n  @ViewChild(\"containerElm\", { static: false }) public container: ElementRef;\n  @ViewChildren(\"viewArea\") public viewArea: QueryList<ElementRef>;\n  @ViewChild(\"prev\", { static: false }) public btnPrev: ElementRef;\n  @ViewChild(\"next\", { static: false }) public btnNext: ElementRef;\n  @ViewChild(\"progress\", { static: false })\n  public progressContainerElm: ElementRef;\n\n  // get all item elms\n  @ContentChildren(NgxAdvancedCarouselItemDirective, {\n    descendants: true,\n    read: ElementRef,\n  })\n  public itemElms: QueryList<ElementRef>;\n\n  @ContentChild(\"carouselPrev\", { static: false })\n  public contentPrev: TemplateRef<any>;\n  @ContentChild(\"carouselNext\", { static: false })\n  public contentNext: TemplateRef<any>;\n  @ContentChild(\"carouselDot\", { static: false })\n  public dotElm: TemplateRef<any>;\n  @ContentChild(\"carouselItemTemplate\", { static: false })\n  public carouselItemTemplate: TemplateRef<any>;\n  @ContentChild(\"carouselProgress\", { static: false })\n  public progressElm: TemplateRef<any>;\n\n  public _data: any[];\n\n  @Output() public mappedData: EventEmitter<any[]> = new EventEmitter();\n  /** when infinite is true, the animation time with item, default is 400. */\n  @Input() public aniTime = 400;\n  /** this class will add in #containerElm when model change */\n  @Input() public aniClass = \"transition\";\n\n  /** this class will add when carousel auto play,\n   * this default autoplay animation is same as aniClass\n   */\n  @Input() public aniClassAuto = this.aniClass;\n\n  // tslint:disable-next-line: no-input-rename\n  @Input(\"show-next-prev-buttons\") public showButtonsMethod:\n    | \"always\"\n    | \"auto-hide\"\n    | \"auto-disable\" = \"always\";\n\n  /**\n   * user move picture with the container width rate,\n   * when more than that rate, it will go to next or prev,\n   * set false will never move with distance rate,\n   * default is `0.15`\n   */\n  @Input(\"pan-boundary\") public panBoundary: number | false = 0.15;\n\n  /** when show-num is bigger than 1, the first item align, defaulte is `center` */\n  @Input() public align: \"left\" | \"center\" | \"right\" | \"top\" | \"bottom\" =\n    \"center\";\n\n  /**\n   * disable when drag occur the child element will follow touch point.\n   * default is `false`\n   */\n  @Input(\"not-follow-pan\") public notDrag = false;\n\n  @Input() public trackByKey = \"code\";\n  /**\n   * the event binding state for stop auto play when mourse moveover\n   */\n  @Input(\"mourse-enable\") public mourseEnable = false;\n  /** each auto play between time */\n  @Input(\"between-delay\") public delay = 8000;\n  /** auto play direction, default is `right`. */\n  @Input(\"autoplay-direction\") public direction: \"left\" | \"right\" = \"right\";\n  /** how many number with each scroll, default is `1`. */\n  @Input(\"scroll-num\") public scrollNum = 1;\n  /** Could user scroll many item once, simulate with scrollbar, default is `false` */\n  @Input(\"drag-many\") public isDragMany = false;\n  /** Minimal velocity required before recognizing, unit is in px per ms, default `0.3` */\n  @Input(\"swipe-velocity\") public swipeVelocity = 0.3;\n\n  @Input() public isRtl = false;\n  /**\n   * switch show number with custom logic like css @media (min-width: `number`px)\n   */\n  @Input() public breakpoint: Array<{\n    gridBy?;\n    screenSize: \"xxl\" | \"xl\" | \"lg\" | \"md\" | \"sm\" | \"xs\";\n    number;\n    scrollNum?;\n    padding?;\n  }> = [];\n\n  @Input() public screenSizeMap = {\n    xxl: 1440,\n    // tslint:disable-next-line: object-literal-sort-keys\n    xl: 1200,\n    lg: 992,\n    md: 768,\n    sm: 576,\n    xs: 0,\n  };\n\n  @Input() padding: number = 0;\n\n  public leaveObs$ = merge(\n    fromEvent(this._document, \"mouseup\"),\n    fromEvent(this._document, \"touchend\")\n  ).pipe(\n    tap((e: Event) => {\n      this.grabbing = false;\n      e.stopPropagation();\n      e.preventDefault();\n    })\n  );\n\n  private isFromAuto = true;\n  private isAutoNum = false;\n  private mouseOnContainer = false;\n  private alignDistance = 0;\n  private elmWidth = 0;\n  private elmHeight = 0;\n\n  private rootElm: HTMLElement;\n  private containerElm: HTMLElement;\n\n  private elms: Array<HTMLElement>;\n\n  private hammer;\n\n  private doNextSub$: Subscription;\n  private doNext: Observable<any>;\n\n  private restart = new BehaviorSubject<any>(null);\n  private speedChange = new BehaviorSubject(5000);\n  private stopEvent = new Subject<any>();\n  private destroy$ = new Subject<any>();\n\n  private _porgressWidth = 0;\n  private _currentIndex = 0;\n  public _showNum = 1;\n  private _autoplay = false;\n  private _infinite = false;\n  private _grabbing = false;\n  private _disableDrag = false;\n  public gridBy = { col: 1, row: 1 };\n\n  private panCount = 0;\n\n  // this variable use for check the init value is write with ngModel,\n  // when init first, not set with animation\n\n  public realIndex = this._currentIndex;\n\n  public wrapperWidth;\n\n  public singleTimeRun = true;\n  private initialIndex = 0;\n  public originalData = [];\n\n  private _infineDataCount = 0;\n  public ngAfterViewInit() {\n    this.rootElm = this.container.nativeElement;\n    this.containerElm = this.rootElm.children[0] as HTMLElement;\n\n    this.init();\n\n    forkJoin([\n      ...this.bindClick(),\n      // when item changed, remove old hammer binding, and reset width\n      this.itemElms.changes.pipe(\n        // detectChanges to change view dots\n        tap(() => {\n          this.destroy();\n          this.init();\n          this.progressWidth = 0;\n        }),\n        tap(() => this._cd.detectChanges())\n      ),\n      resizeObservable(this.rootElm, () => this.containerResize()),\n    ])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe();\n  }\n\n  public ngOnDestroy() {\n    this.destroy();\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n\n  public writeValue(value: any) {\n    if (value || value === 0) {\n      this.currentIndex = value;\n    }\n  }\n\n  public registerOnChange(fn: (value: any) => any) {\n    this.onChange = fn;\n  }\n  public registerOnTouched(fn: () => any) {\n    this.onTouched = fn;\n  }\n  private onChange = (_: any) => {};\n  private onTouched = () => {};\n\n  private init() {\n    this.initVariable();\n    this.setViewWidth(true);\n    this.reSetAlignDistance();\n    if (!this.disableDrag) {\n      this.hammer = this.bindHammer();\n    }\n    this.drawView(this.currentIndex, false);\n    this.currentIndex = this.startIndex;\n    /* if (isPlatformBrowser(this.platformId) && this.runLoop) {\n      this.addInfiniteElm();\n    } */\n  }\n\n  private destroy() {\n    this.destoryHammer();\n\n    if (this.autoplay) {\n      this.doNextSub$.unsubscribe();\n    }\n  }\n\n  private destoryHammer() {\n    if (this.hammer) {\n      this.hammer.destroy();\n    }\n  }\n\n  private containerResize() {\n    this.setViewWidth();\n    this.reSetAlignDistance();\n\n    this.currentIndex = this.startIndex || this.initialIndex;\n\n    this.drawView(this.currentIndex, false);\n  }\n\n  private initVariable() {\n    this._zone.runOutsideAngular(() => {\n      this.elms = this.itemElms.toArray().map((x) => x.nativeElement);\n\n      let startEvent = this.restart.asObservable();\n      let stopEvent = this.stopEvent.asObservable();\n      if (this.mourseEnable) {\n        startEvent = merge(\n          startEvent,\n          fromEvent(this.containerElm, \"mouseleave\").pipe(\n            filter(() => !this.grabbing),\n            tap(() => (this.mouseOnContainer = false))\n          )\n        );\n        stopEvent = merge(\n          stopEvent,\n          fromEvent(this.containerElm, \"mouseover\").pipe(\n            tap(() => (this.mouseOnContainer = true))\n          )\n        );\n      }\n\n      this.doNext = startEvent.pipe(\n        switchMap(() => this.speedChange),\n        switchMap(() =>\n          timer(this.delay).pipe(\n            switchMap(() => this.runProgress(20)),\n            tap(() => {\n              this.isFromAuto = true;\n              if (this.direction === \"left\") {\n                this.currentIndex -= this.scrollNum;\n              } else {\n                this.currentIndex += this.scrollNum;\n              }\n            }),\n            takeUntil(stopEvent.pipe(tap(() => (this.progressWidth = 0))))\n          )\n        )\n      );\n\n      if (this.autoplay) {\n        this.doNextSub$ = this.doNext.subscribe();\n      }\n    });\n  }\n\n  private reSetAlignDistance() {\n    switch (this.align) {\n      case \"center\":\n        this.alignDistance = (this.rootElmWidth - this.elmWidth) / 2;\n        break;\n      case \"left\":\n        this.alignDistance = 0;\n        break;\n      case \"right\":\n        this.alignDistance = 0;\n        break;\n      case \"top\":\n        this.alignDistance = 0;\n        break;\n      case \"bottom\":\n        this.alignDistance = 0;\n    }\n  }\n\n  private setViewWidth(isInit?: boolean) {\n    if (!this.verticalModeEnabled) {\n      if (this.isAutoNum) {\n        this._showNum = this.getAutoNum();\n        this.realIndex = this._showNum;\n        this.currentIndex = this.startIndex;\n      }\n      this._infineDataCount = this._showNum * 2;\n      this.infinite =\n        this.data && this.data.length > this._showNum ? this.infinite : false;\n      this._renderer.addClass(this.containerElm, \"grab\");\n      if (isInit) {\n        // remain one elm height\n        this.initData(this._infineDataCount);\n        this._renderer.addClass(\n          this.containerElm,\n          \"ngx-advanced-carousel-display-nowrap\"\n        );\n      }\n      this.elmWidth =\n        this.rootElmWidth / (this._showNum / this.gridBy.row) -\n        (this.padding * 2) /\n          (this.gridBy.col > 1\n            ? this.gridBy.col\n            : this._showNum / this.gridBy.row);\n\n      this._renderer.removeClass(\n        this.containerElm,\n        \"ngx-advanced-carousel-display-nowrap\"\n      );\n\n      this.containerElmWidth =\n        (this.rootElmWidth - this.padding * 2) *\n        (this.elms.length / this._showNum);\n\n      this._renderer.setStyle(this.containerElm, \"position\", \"relative\");\n      this.viewArea.forEach((element) => {\n        element.nativeElement.setAttribute(\n          \"style\",\n          `width:${this.rootElmWidth - this.padding * 2}px`\n        );\n      });\n\n      this.elms.forEach((elm: HTMLElement) => {\n        this.setStyle(elm, \"width\", this.elmWidth);\n      });\n    } else {\n      this.setViewHeight(isInit);\n    }\n    this._cd.detectChanges();\n  }\n\n  private setViewHeight(isInit?: boolean) {\n    if (this.isAutoNum) {\n      this._showNum = this.getAutoNum();\n      this.realIndex = this._showNum;\n      this.currentIndex = this.startIndex;\n    }\n    this._infineDataCount = this._showNum * 2;\n    this.infinite =\n      this.data && this.data.length > this._showNum ? this.infinite : false;\n    this._renderer.addClass(this.containerElm, \"grab\");\n    if (isInit) {\n      // remain one elm height\n      this.initData(this._infineDataCount);\n      this._renderer.addClass(\n        this.containerElm,\n        \"ngx-advanced-carousel-display-nowrap\"\n      );\n    }\n    this.elmWidth =\n      this.rootElmHeight / (this._showNum / this.gridBy.row) -\n      (this.padding * 2) /\n        (this.gridBy.col > 1\n          ? this.gridBy.col\n          : this._showNum / this.gridBy.row);\n\n    this._renderer.removeClass(\n      this.containerElm,\n      \"ngx-advanced-carousel-display-nowrap\"\n    );\n\n    this.containerElmWidth =\n      (this.rootElmHeight - this.padding * 2) *\n      (this.elms.length / this._showNum);\n\n    this._renderer.setStyle(this.containerElm, \"position\", \"relative\");\n    this.viewArea.forEach((element) => {\n      element.nativeElement.setAttribute(\n        \"style\",\n        `height:${this.rootElmHeight - this.padding * 2}px`\n      );\n    });\n\n    this.elms.forEach((elm: HTMLElement) => {\n      this.setStyle(elm, \"height\", this.elmWidth);\n    });\n  }\n\n  private bindHammer() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return null;\n    }\n    return this._zone.runOutsideAngular(() => {\n      const hm = new Hammer.Manager(this.containerElm);\n\n      const pan = new Hammer.Pan({\n        direction: Hammer.DIRECTION_HORIZONTAL,\n        threshold: 0,\n      });\n\n      hm.add(pan);\n\n      hm.on(\"panleft panright panend pancancel\", (e) => {\n        if (this.lengthOne) {\n          return;\n        }\n\n        this.removeContainerTransition();\n\n        if (this.autoplay) {\n          this._zone.runOutsideAngular(() => {\n            this.stopEvent.next();\n          });\n        }\n\n        switch (e.type) {\n          case \"panleft\":\n          case \"panright\":\n            this.panCount++;\n            if (this.panCount < 2) {\n              return;\n            }\n\n            this.grabbing = true;\n            if (this.align !== \"center\" && this.showNum >= this.elms.length) {\n              this.hammer.stop(true);\n              return;\n            }\n            if (!this.runLoop && this.outOfBound(e.type)) {\n              this.verticalModeEnabled ? e.deltaY : (e.deltaX *= 0.2);\n            }\n\n            if (!this.notDrag) {\n              this.left =\n                -this.currentIndex * this.elmWidth +\n                this.alignDistance +\n                (this.verticalModeEnabled\n                  ? e.deltaY\n                  : this.align === \"right\"\n                  ? -e.deltaX\n                  : e.deltaX);\n            }\n\n            if (!this.isDragMany) {\n              if (\n                Math.abs(this.verticalModeEnabled ? e.deltaY : e.deltaX) >\n                this.elmWidth * 0.5\n              ) {\n                if ((this.verticalModeEnabled ? e.deltaY : e.deltaX) > 0) {\n                  if (this.align === \"right\") {\n                    this.currentIndex += this.scrollNum;\n                  } else {\n                    this.currentIndex -= this.scrollNum;\n                  }\n                } else {\n                  if (this.align === \"right\") {\n                    this.currentIndex -= this.scrollNum;\n                  } else {\n                    this.currentIndex += this.scrollNum;\n                  }\n                }\n                this.hammer.stop(true);\n                return;\n              }\n            }\n            break;\n          case \"pancancel\":\n            this.drawView(this.currentIndex);\n            break;\n\n          case \"panend\":\n            if (\n              this.panBoundary !== false &&\n              Math.abs(this.verticalModeEnabled ? e.deltaY : e.deltaX) >\n                this.elmWidth * this.panBoundary\n            ) {\n              const moveNum = this.isDragMany\n                ? Math.ceil(\n                    Math.abs(this.verticalModeEnabled ? e.deltaY : e.deltaX) /\n                      this.elmWidth\n                  )\n                : this.scrollNum;\n\n              const prevIndex = this.currentIndex - moveNum;\n              const nextIndex = this.currentIndex + moveNum;\n\n              if ((this.verticalModeEnabled ? e.deltaY : e.deltaX) > 0) {\n                this.align === \"right\"\n                  ? this.goNext(nextIndex)\n                  : this.goPrev(prevIndex);\n              } else {\n                this.align === \"right\"\n                  ? this.goPrev(prevIndex)\n                  : this.goNext(nextIndex);\n              }\n              break;\n            } else if (e.velocityX < -this.swipeVelocity && e.distance > 10) {\n              this.align === \"right\"\n                ? this.goPrev(this.currentIndex - this.scrollNum)\n                : this.goNext(this.currentIndex + this.scrollNum);\n            } else if (e.velocityX > this.swipeVelocity && e.distance > 10) {\n              this.align === \"right\"\n                ? this.goNext(this.currentIndex + this.scrollNum)\n                : this.goPrev(this.currentIndex - this.scrollNum);\n            } else {\n              this.drawView(this.currentIndex);\n            }\n            break;\n        }\n      });\n\n      return hm;\n    });\n  }\n\n  private goPrev(prevIndex: number) {\n    if (!this.runLoop && prevIndex < 0) {\n      prevIndex = 0;\n      this.drawView(0);\n    }\n    this.currentIndex = prevIndex;\n  }\n\n  private goNext(nextIndex: number) {\n    if (!this.runLoop && nextIndex > this.maxRightIndex) {\n      nextIndex = this.maxRightIndex;\n      this.drawView(nextIndex);\n    }\n    this.currentIndex = nextIndex;\n  }\n\n  private bindClick() {\n    if (this.btnNext && this.btnPrev) {\n      return [\n        fromEvent(this.btnNext.nativeElement, \"click\").pipe(\n          map(() => (this.currentIndex += this.scrollNum))\n        ),\n        fromEvent(this.btnPrev.nativeElement, \"click\").pipe(\n          map(() => {\n            return (this.currentIndex = this.currentIndex - this.scrollNum);\n          })\n        ),\n      ];\n    }\n    return [];\n  }\n\n  private callRestart() {\n    if (this.autoplay && !this.mouseOnContainer && !this.grabbing) {\n      this._zone.runOutsideAngular(() => {\n        this.restart.next(null);\n      });\n    }\n  }\n\n  private drawView(\n    index: number,\n    isAnimation = true,\n    isFromAuto = this.isFromAuto\n  ) {\n    if (this.elms.length > 1 && this.elms.length > this._showNum) {\n      this.removeContainerTransition();\n      this.left = -index * this.elmWidth + this.alignDistance;\n\n      if (isAnimation) {\n        if (isFromAuto) {\n          this._renderer.addClass(this.containerElm, this.aniClassAuto);\n        } else {\n          this._renderer.addClass(this.containerElm, this.aniClass);\n        }\n      }\n    } else {\n      this.left = this.alignDistance;\n    }\n  }\n\n  private removeContainerTransition() {\n    this._renderer.removeClass(this.containerElm, this.aniClass);\n    this._renderer.removeClass(this.containerElm, this.aniClassAuto);\n  }\n\n  private outOfBound(type) {\n    switch (type) {\n      case \"panleft\":\n        return this.currentIndex >= this.maxRightIndex;\n      case \"panright\":\n        return this.currentIndex <= 0;\n    }\n  }\n\n  private runProgress(betweenTime): Observable<any> {\n    return this._zone.runOutsideAngular(() => {\n      const howTimes = this.speed / betweenTime;\n      const everyIncrease = (100 / this.speed) * betweenTime;\n      return interval(betweenTime).pipe(\n        tap((t) => {\n          this.progressWidth = (t % howTimes) * everyIncrease;\n        }),\n        bufferCount(Math.round(howTimes), 0)\n      );\n    });\n  }\n  private initData(showNum) {\n    if (!this.originalData.length) {\n      this.originalData = [...this.data];\n    }\n\n    if (this.infinite) {\n      this.singleTimeRun = false;\n      this.data = this.arrayCreator(this.originalData, showNum);\n      this._currentIndex = showNum;\n      this.initialIndex = this.currentIndex;\n    }\n  }\n\n  private getAutoNum() {\n    const currWidth = this.rootElmWidth;\n    if (this.breakpoint.length > 0) {\n      const now = this.breakpoint.find((b) => {\n        return this.screenSizeMap[b.screenSize] <= currWidth;\n      });\n      if (now) {\n        this.padding = now.padding || this.padding;\n        if (now.gridBy) {\n          this.scrollNum = now.gridBy.col || now.scrollNum || now.number;\n          this.gridBy = now.gridBy;\n          const showNum = now.gridBy.col * now.gridBy.row || now.number;\n          return showNum;\n        } else {\n          this.scrollNum = now.scrollNum || now.number;\n          this.gridBy = { col: now.number, row: 1 };\n          return now.number;\n        }\n      }\n      this.padding =\n        this.breakpoint[this.breakpoint.length - 1].padding || this.padding;\n      if (this.breakpoint[this.breakpoint.length - 1].gridBy) {\n        this.scrollNum =\n          this.breakpoint[this.breakpoint.length - 1].gridBy.col ||\n          this.breakpoint[this.breakpoint.length - 1].scrollNum ||\n          this.breakpoint[this.breakpoint.length - 1].number;\n        this.gridBy = this.breakpoint[this.breakpoint.length - 1].gridBy;\n        const showNum =\n          this.breakpoint[this.breakpoint.length - 1].gridBy.col *\n            this.breakpoint[this.breakpoint.length - 1].gridBy.row ||\n          this.breakpoint[this.breakpoint.length - 1].number;\n        return showNum;\n      } else {\n        this.scrollNum =\n          this.breakpoint[this.breakpoint.length - 1].scrollNum ||\n          this.breakpoint[this.breakpoint.length - 1].number;\n        this.gridBy = { col: 1, row: 1 };\n        return this.breakpoint[this.breakpoint.length - 1].number;\n      }\n    }\n\n    const initNum = 3;\n    if (currWidth > 200) {\n      return Math.floor(initNum + currWidth / 100);\n    }\n\n    return initNum;\n  }\n\n  private setStyle(elm: HTMLElement, style: string, value: number) {\n    if (isPlatformBrowser(this.platformId)) {\n      this._renderer.setStyle(elm, style, `${value}px`);\n    } else {\n      this._renderer.setStyle(elm, style, `${value}%`);\n    }\n  }\n\n  public trackByFcn(index, item) {\n    if (!item || item[this.trackByKey]) {\n      return null;\n    }\n    return item[this.trackByKey];\n  }\n\n  public arrayCreator(arr, count) {\n    const data = [...arr];\n    for (let i = 0; i < count; i++) {\n      data.unshift(arr[arr.length - 1 - (i % arr.length)]);\n      data.push(arr[i % arr.length]);\n    }\n    return data;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgxAdvancedCarouselItemDirective } from './ngx-advanced-carousel-item.directive';\nimport { NgxAdvancedCarouselComponent } from './ngx-advanced-carousel.component';\n\n@NgModule({\n  declarations: [NgxAdvancedCarouselComponent, NgxAdvancedCarouselItemDirective],\n  exports: [NgxAdvancedCarouselComponent, NgxAdvancedCarouselItemDirective],\n  imports: [CommonModule, FormsModule],\n})\nexport class NgxAdvancedCarouselModule {}\n"]}